
import pyttsx3
import datetime
import speech_recognition as sr
import wikipedia
import webbrowser
import os
import pywhatkit

engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[0].id)

def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def greet():
    print("Hello, how can I help you?")
    speak("Hello, how can I help you?")

def command():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        r.pause_threshold = 1
        audio = r.listen(source)
    
    try:
        print("Recognizing...")
        query = r.recognize_google(audio)
        print("Command:", query)
    except Exception as e:
        print("Could not understand. Please repeat.")
        return ""
    
    return query.lower()

if __name__ == "__main__":
    greet()

    while True:
        query = command()

        if query:
            if 'who' in query:
                speak("Searching Wikipedia....")
                query = query.replace("who", "")
                results = wikipedia.summary(query)
                speak("According to Wikipedia..")
                print(results)
                speak(results)

            elif 'youtube' in query:
                webbrowser.open("youtube.com")

            elif 'google' in query:
                webbrowser.open("google.com")

            elif 'time' in query:
                stime = datetime.datetime.now().strftime("%I:%M:%p")
                print("Time is", stime)
                speak("The time is " + stime)

            elif 'open vs code' in query:
                vspath = "C:\\Users\\AYUSH\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe"
                os.startfile(vspath)

            elif 'open steam' in query:
                stpath = "C:\\Program Files (x86)\\Steam\\steam.exe"
                os.startfile(stpath)

            elif 'play' in query:
                song = query.replace("play", "")
                print("Playing...", song)
                speak("Playing " + song)
                pywhatkit.playonyt(song)

            elif 'search' in query or 'search for' in query:
                if 'search for' in query:
                    query = query.replace("search for", "")
                pywhatkit.search(query)
                
            elif 'exit' in query or 'quit' in query:
                speak("Goodbye mate have a nice day")
                break
